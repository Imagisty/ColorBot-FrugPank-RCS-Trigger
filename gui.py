import tkinter as tk
from tkinter import ttk, StringVar, DoubleVar, IntVar, BooleanVar
from utils import settings
from config import SCREEN_WIDTH, SCREEN_HEIGHT, TARGET_FPS

# GUI –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
status_vars = {}
gui_vars = {}


def update_gui_status():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ GUI"""
    if status_vars:
        status_vars["auto_aim"].set("üéØ ON" if settings.auto_aim_mode else "üéØ OFF")
        status_vars["auto_shoot"].set("üî´ ON" if settings.auto_shoot_mode else "üî´ OFF")
        status_vars["recoil_comp"].set("‚ÜóÔ∏è ON" if settings.recoil_compensation_enabled else "‚ÜóÔ∏è OFF")
        status_vars["instant_snap"].set("‚ö° ON" if settings.instant_snap_mode else "‚ö° OFF")


def update_settings_from_gui():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ GUI"""
    if gui_vars:
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∏–º–∞
        settings.smoothing_factor = gui_vars["smoothing_factor"].get()
        settings.snap_sensitivity = gui_vars["snap_sensitivity"].get()
        settings.center_bias_x = gui_vars["center_bias_x"].get()
        settings.center_bias_y = gui_vars["center_bias_y"].get()

        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–¥–∞—á–∏
        settings.recoil_vertical = gui_vars["recoil_vertical"].get()
        settings.recoil_horizontal = gui_vars["recoil_horizontal"].get()

        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏
        settings.min_area = int(gui_vars["min_area"].get())
        settings.fill_strength = gui_vars["fill_strength"].get()
        settings.pixel_expansion = gui_vars["pixel_expansion"].get()
        settings.contour_fill_aggressive = gui_vars["contour_fill_aggressive"].get()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–æ–Ω—É –∑–∞—Ö–≤–∞—Ç–∞
        settings.capture_zone_size = gui_vars["capture_zone_size"].get()
        settings.update_capture_zone()

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–¥–∏—É—Å—ã
        settings.radius_settings["auto_shoot_horizontal_radius"] = int(gui_vars["shoot_h_radius"].get())
        settings.radius_settings["auto_shoot_vertical_radius"] = int(gui_vars["shoot_v_radius"].get())
        settings.radius_settings["auto_aim_horizontal_radius"] = int(gui_vars["aim_h_radius"].get())
        settings.radius_settings["auto_aim_vertical_radius"] = int(gui_vars["aim_v_radius"].get())

        settings.shoot_delay = int(gui_vars["shoot_delay"].get())


def toggle_auto_aim():
    settings.auto_aim_mode = not settings.auto_aim_mode
    print(f"üéØ Auto-aim mode {'enabled' if settings.auto_aim_mode else 'disabled'}")
    update_gui_status()


def toggle_auto_shoot():
    settings.auto_shoot_mode = not settings.auto_shoot_mode
    print(f"üî´ Auto-shoot mode {'enabled' if settings.auto_shoot_mode else 'disabled'}")
    update_gui_status()


def toggle_recoil_compensation():
    settings.recoil_compensation_enabled = not settings.recoil_compensation_enabled
    print(f"‚ÜóÔ∏è Recoil compensation {'enabled' if settings.recoil_compensation_enabled else 'disabled'}")
    update_gui_status()


def toggle_instant_snap_mode():
    settings.instant_snap_mode = not settings.instant_snap_mode
    print(f"‚ö° Instant snap mode {'enabled' if settings.instant_snap_mode else 'disabled'}")
    update_gui_status()


def save_all_settings():
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    update_settings_from_gui()
    settings.save_settings()
    print("üíæ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")


def reset_to_defaults():
    """–°–±—Ä–æ—Å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    from config import DEFAULT_SETTINGS, DEFAULT_RADIUS_SETTINGS

    for key, value in DEFAULT_SETTINGS.items():
        setattr(settings, key, value)

    settings.radius_settings.update(DEFAULT_RADIUS_SETTINGS)
    update_gui_from_settings()
    print("üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!")


def update_gui_from_settings():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ GUI –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    if gui_vars:
        gui_vars["smoothing_factor"].set(settings.smoothing_factor)
        gui_vars["snap_sensitivity"].set(settings.snap_sensitivity)
        gui_vars["center_bias_x"].set(settings.center_bias_x)
        gui_vars["center_bias_y"].set(settings.center_bias_y)

        gui_vars["recoil_vertical"].set(settings.recoil_vertical)
        gui_vars["recoil_horizontal"].set(settings.recoil_horizontal)

        gui_vars["min_area"].set(settings.min_area)
        gui_vars["fill_strength"].set(settings.fill_strength)
        gui_vars["pixel_expansion"].set(settings.pixel_expansion)
        gui_vars["contour_fill_aggressive"].set(settings.contour_fill_aggressive)

        gui_vars["capture_zone_size"].set(settings.capture_zone_size)

        gui_vars["shoot_h_radius"].set(settings.radius_settings["auto_shoot_horizontal_radius"])
        gui_vars["shoot_v_radius"].set(settings.radius_settings["auto_shoot_vertical_radius"])
        gui_vars["aim_h_radius"].set(settings.radius_settings["auto_aim_horizontal_radius"])
        gui_vars["aim_v_radius"].set(settings.radius_settings["auto_aim_vertical_radius"])

        gui_vars["shoot_delay"].set(settings.shoot_delay)


def create_enhanced_interface():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏"""
    global status_vars, gui_vars

    gui_root = tk.Tk()
    gui_root.title(f"‚ö° Enhanced ‚ö°")
    gui_root.geometry("800x700")
    gui_root.configure(bg='#1a1a1a')
    gui_root.resizable(True, True)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
    style = ttk.Style()
    style.theme_use('clam')

    # –¢–µ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
    style.configure('Dark.TNotebook', background='#2d2d2d', foreground='#ffffff')
    style.configure('Dark.TNotebook.Tab', background='#404040', foreground='#ffffff', padding=[10, 4])
    style.map('Dark.TNotebook.Tab', background=[('selected', '#00ff88'), ('active', '#555555')])

    style.configure('Dark.TLabelframe', background='#2d2d2d', foreground='#ffffff')
    style.configure('Dark.TLabelframe.Label', background='#2d2d2d', foreground='#00ff88')
    style.configure('Dark.TLabel', background='#2d2d2d', foreground='#ffffff')
    style.configure('Dark.TButton', background='#404040', foreground='#ffffff')
    style.map('Dark.TButton', background=[('active', '#555555')])

    # –í–ê–ñ–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö GUI –î–û —Å–æ–∑–¥–∞–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
    init_gui_vars()

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_frame = tk.Frame(gui_root, bg='#1a1a1a')
    title_frame.pack(pady=10, fill='x')

    tk.Label(title_frame, text="‚ö° Enhanced ‚ö°",
             font=("Arial", 18, "bold"), fg="#ff0066", bg='#1a1a1a').pack()
    tk.Label(title_frame, text="VISION ZONE",
             font=("Arial", 12, "bold"), fg="#00ff88", bg='#1a1a1a').pack()
    tk.Label(title_frame, text=f"Resolution: {SCREEN_WIDTH}x{SCREEN_HEIGHT} | FPS: {TARGET_FPS}",
             font=("Arial", 9), fg="#888888", bg='#1a1a1a').pack()

    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ (—Ç–µ–ø–µ—Ä—å gui_vars —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω)
    notebook = ttk.Notebook(gui_root, style='Dark.TNotebook')
    notebook.pack(fill='both', expand=True, padx=10, pady=5)

    # –í–∫–ª–∞–¥–∫–∞ 1: –ì–ª–∞–≤–Ω–∞—è / –°—Ç–∞—Ç—É—Å
    tab_main = create_main_tab(notebook)
    notebook.add(tab_main, text="üìä –ì–ª–∞–≤–Ω–∞—è")

    # –í–∫–ª–∞–¥–∫–∞ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∏–º–∞
    tab_aim = create_aim_tab(notebook)
    notebook.add(tab_aim, text="üéØ –ê–∏–º")

    # –í–∫–ª–∞–¥–∫–∞ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–¥–∞—á–∏
    tab_recoil = create_recoil_tab(notebook)
    notebook.add(tab_recoil, text="‚ÜóÔ∏è –û—Ç–¥–∞—á–∞")

    # –í–∫–ª–∞–¥–∫–∞ 4: –î–µ—Ç–µ–∫—Ü–∏—è
    tab_detection = create_detection_tab(notebook)
    notebook.add(tab_detection, text="üëÅÔ∏è –î–µ—Ç–µ–∫—Ü–∏—è")

    # –í–∫–ª–∞–¥–∫–∞ 5: –ó–æ–Ω–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏
    tab_vision = create_vision_tab(notebook)
    notebook.add(tab_vision, text="üìπ –ó–æ–Ω–∞")

    # –í–∫–ª–∞–¥–∫–∞ 6: –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
    tab_hotkeys = create_hotkeys_tab(notebook)
    notebook.add(tab_hotkeys, text="‚å®Ô∏è –ö–ª–∞–≤–∏—à–∏")

    # –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏
    bottom_frame = tk.Frame(gui_root, bg='#1a1a1a')
    bottom_frame.pack(fill='x', padx=10, pady=5)

    button_frame = tk.Frame(bottom_frame, bg='#1a1a1a')
    button_frame.pack(side='right')

    ttk.Button(button_frame, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=save_all_settings,
               style='Dark.TButton').pack(side='left', padx=5)
    ttk.Button(button_frame, text="üîÑ –°–±—Ä–æ—Å", command=reset_to_defaults,
               style='Dark.TButton').pack(side='left', padx=5)
    ttk.Button(button_frame, text="‚ùå –í—ã—Ö–æ–¥", command=gui_root.quit,
               style='Dark.TButton').pack(side='left', padx=5)

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ GUI –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ (–ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
    update_gui_from_settings()
    update_gui_status()

    def on_closing():
        settings.running = False
        gui_root.quit()
        gui_root.destroy()

    gui_root.protocol("WM_DELETE_WINDOW", on_closing)
    gui_root.mainloop()


def init_gui_vars():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö GUI"""
    global gui_vars

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ settings –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
    settings.load_settings()

    gui_vars = {
        "smoothing_factor": DoubleVar(value=settings.smoothing_factor),
        "snap_sensitivity": DoubleVar(value=settings.snap_sensitivity),
        "center_bias_x": DoubleVar(value=settings.center_bias_x),
        "center_bias_y": DoubleVar(value=settings.center_bias_y),

        "recoil_vertical": DoubleVar(value=settings.recoil_vertical),
        "recoil_horizontal": DoubleVar(value=settings.recoil_horizontal),

        "min_area": IntVar(value=settings.min_area),
        "fill_strength": DoubleVar(value=settings.fill_strength),
        "pixel_expansion": DoubleVar(value=settings.pixel_expansion),
        "contour_fill_aggressive": DoubleVar(value=settings.contour_fill_aggressive),

        "capture_zone_size": DoubleVar(value=settings.capture_zone_size),

        "shoot_h_radius": IntVar(value=settings.radius_settings["auto_shoot_horizontal_radius"]),
        "shoot_v_radius": IntVar(value=settings.radius_settings["auto_shoot_vertical_radius"]),
        "aim_h_radius": IntVar(value=settings.radius_settings["auto_aim_horizontal_radius"]),
        "aim_v_radius": IntVar(value=settings.radius_settings["auto_aim_vertical_radius"]),

        "shoot_delay": IntVar(value=settings.shoot_delay)
    }

    print("‚úÖ GUI –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã:", list(gui_vars.keys()))


def create_main_tab(notebook):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º"""
    global status_vars

    tab = tk.Frame(notebook, bg='#2d2d2d')

    # –°—Ç–∞—Ç—É—Å–Ω–∞—è –ø–∞–Ω–µ–ª—å
    status_frame = ttk.LabelFrame(tab, text="üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã",
                                  style='Dark.TLabelframe', padding=15)
    status_frame.pack(fill='x', padx=10, pady=10)

    status_vars["auto_aim"] = StringVar(value="üéØ OFF")
    status_vars["auto_shoot"] = StringVar(value="üî´ OFF")
    status_vars["recoil_comp"] = StringVar(value="‚ÜóÔ∏è OFF")
    status_vars["instant_snap"] = StringVar(value="‚ö° OFF")

    status_grid = tk.Frame(status_frame, bg='#2d2d2d')
    status_grid.pack(fill='x')

    # –°—Ç—Ä–æ–∫–∞ 1
    tk.Label(status_grid, textvariable=status_vars["auto_aim"], font=("Arial", 11, "bold"),
             fg="#00ff88", bg='#404040', relief='raised', padx=10, pady=5).grid(row=0, column=0, padx=5, pady=5,
                                                                                sticky='ew')
    tk.Label(status_grid, textvariable=status_vars["auto_shoot"], font=("Arial", 11, "bold"),
             fg="#00ff88", bg='#404040', relief='raised', padx=10, pady=5).grid(row=0, column=1, padx=5, pady=5,
                                                                                sticky='ew')

    # –°—Ç—Ä–æ–∫–∞ 2
    tk.Label(status_grid, textvariable=status_vars["recoil_comp"], font=("Arial", 11, "bold"),
             fg="#00ff88", bg='#404040', relief='raised', padx=10, pady=5).grid(row=1, column=0, padx=5, pady=5,
                                                                                sticky='ew')
    tk.Label(status_grid, textvariable=status_vars["instant_snap"], font=("Arial", 11, "bold"),
             fg="#00ff88", bg='#404040', relief='raised', padx=10, pady=5).grid(row=1, column=1, padx=5, pady=5,
                                                                                sticky='ew')

    status_grid.columnconfigure(0, weight=1)
    status_grid.columnconfigure(1, weight=1)

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    control_frame = ttk.LabelFrame(tab, text="üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                                   style='Dark.TLabelframe', padding=15)
    control_frame.pack(fill='x', padx=10, pady=10)

    buttons_grid = tk.Frame(control_frame, bg='#2d2d2d')
    buttons_grid.pack(fill='x')

    ttk.Button(buttons_grid, text="üéØ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–∏–º", command=toggle_auto_aim,
               style='Dark.TButton').grid(row=0, column=0, padx=5, pady=5, sticky='ew')
    ttk.Button(buttons_grid, text="üî´ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç—Ä–µ–ª—å–±—É", command=toggle_auto_shoot,
               style='Dark.TButton').grid(row=0, column=1, padx=5, pady=5, sticky='ew')

    ttk.Button(buttons_grid, text="‚ÜóÔ∏è –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ—Ç–¥–∞—á—É", command=toggle_recoil_compensation,
               style='Dark.TButton').grid(row=1, column=0, padx=5, pady=5, sticky='ew')
    ttk.Button(buttons_grid, text="‚ö° –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–Ω–∞–ø", command=toggle_instant_snap_mode,
               style='Dark.TButton').grid(row=1, column=1, padx=5, pady=5, sticky='ew')

    buttons_grid.columnconfigure(0, weight=1)
    buttons_grid.columnconfigure(1, weight=1)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    info_frame = ttk.LabelFrame(tab, text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ",
                                style='Dark.TLabelframe', padding=15)
    info_frame.pack(fill='both', expand=True, padx=10, pady=10)

    info_text = tk.Text(info_frame, bg='#1a1a1a', fg='#ffffff', font=("Consolas", 9),
                        wrap=tk.WORD, height=10)
    info_text.pack(fill='both', expand=True)

    system_info = f"""
üñ•Ô∏è –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞: {SCREEN_WIDTH} x {SCREEN_HEIGHT}
üéÆ –¶–µ–ª–µ–≤–æ–π FPS: {TARGET_FPS}
üìπ –¢–µ–∫—É—â–∞—è –∑–æ–Ω–∞ –∑–∞—Ö–≤–∞—Ç–∞: {settings.capture_zone_width} x {settings.capture_zone_height}
üéØ –¶–µ–Ω—Ç—Ä –ø—Ä–∏—Ü–µ–ª–∞: ({SCREEN_WIDTH // 2}, {SCREEN_HEIGHT // 2})

‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:
‚Ä¢ 0 - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-–∞–∏–º
‚Ä¢ 8 - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-—Å—Ç—Ä–µ–ª—å–±—É  
‚Ä¢ 9 - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é –æ—Ç–¥–∞—á–∏
‚Ä¢ + - –£–≤–µ–ª–∏—á–∏—Ç—å —Å–∏–ª—É –æ—Ç–¥–∞—á–∏
‚Ä¢ - - –£–º–µ–Ω—å—à–∏—Ç—å —Å–∏–ª—É –æ—Ç–¥–∞—á–∏

üéØ –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π:
‚Ä¢ Auto-Aim: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ —Ü–µ–ª–∏
‚Ä¢ Auto-Shoot: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä–µ–ª—å–±–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
‚Ä¢ Recoil Compensation: –ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –æ—Ç–¥–∞—á–∏ –æ—Ä—É–∂–∏—è
‚Ä¢ Instant Snap: –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –Ω–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ —Ü–µ–ª—å

üí° –î–ª—è –ª—É—á—à–µ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–∫–ª–∞–¥–∫–∞—Ö.
    """

    info_text.insert(tk.END, system_info)
    info_text.config(state=tk.DISABLED)

    return tab


def create_aim_tab(notebook):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–∏–º–∞"""
    tab = tk.Frame(notebook, bg='#2d2d2d')

    # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∏–º–∞
    main_frame = ttk.LabelFrame(tab, text="üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∏–º–∞",
                                style='Dark.TLabelframe', padding=15)
    main_frame.pack(fill='x', padx=10, pady=10)

    # –°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ - –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º ttk.Label –≤–º–µ—Å—Ç–æ tk.Label
    ttk.Label(main_frame, text="–°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ (0.1-1.0):", style='Dark.TLabel').grid(row=0, column=0, sticky='w', padx=5,
                                                                                   pady=5)
    ttk.Scale(main_frame, from_=0.1, to=1.0, variable=gui_vars["smoothing_factor"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=0, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(main_frame, textvariable=gui_vars["smoothing_factor"], style='Dark.TLabel').grid(row=0, column=2, padx=5,
                                                                                               pady=5)

    # –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∞–ø–∞
    ttk.Label(main_frame, text="–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∞–ø–∞ (0.1-2.0):", style='Dark.TLabel').grid(row=1, column=0,
                                                                                              sticky='w', padx=5,
                                                                                              pady=5)
    ttk.Scale(main_frame, from_=0.1, to=2.0, variable=gui_vars["snap_sensitivity"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=1, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(main_frame, textvariable=gui_vars["snap_sensitivity"], style='Dark.TLabel').grid(row=1, column=2, padx=5,
                                                                                               pady=5)

    # –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ —Ü–µ–Ω—Ç—Ä–∞
    calib_frame = ttk.LabelFrame(tab, text="üéØ –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ —Ü–µ–Ω—Ç—Ä–∞",
                                 style='Dark.TLabelframe', padding=15)
    calib_frame.pack(fill='x', padx=10, pady=10)

    # –°–º–µ—â–µ–Ω–∏–µ –ø–æ X
    ttk.Label(calib_frame, text="–°–º–µ—â–µ–Ω–∏–µ –ø–æ X (-50 –¥–æ 50):", style='Dark.TLabel').grid(row=0, column=0, sticky='w',
                                                                                        padx=5, pady=5)
    ttk.Scale(calib_frame, from_=-50, to=50, variable=gui_vars["center_bias_x"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=0, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(calib_frame, textvariable=gui_vars["center_bias_x"], style='Dark.TLabel').grid(row=0, column=2, padx=5,
                                                                                             pady=5)

    # –°–º–µ—â–µ–Ω–∏–µ –ø–æ Y
    ttk.Label(calib_frame, text="–°–º–µ—â–µ–Ω–∏–µ –ø–æ Y (-50 –¥–æ 50):", style='Dark.TLabel').grid(row=1, column=0, sticky='w',
                                                                                        padx=5, pady=5)
    ttk.Scale(calib_frame, from_=-50, to=50, variable=gui_vars["center_bias_y"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=1, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(calib_frame, textvariable=gui_vars["center_bias_y"], style='Dark.TLabel').grid(row=1, column=2, padx=5,
                                                                                             pady=5)

    # –†–∞–¥–∏—É—Å—ã –∞–∏–º–∞
    radius_frame = ttk.LabelFrame(tab, text="üìê –†–∞–¥–∏—É—Å—ã –∞–∏–º–∞",
                                  style='Dark.TLabelframe', padding=15)
    radius_frame.pack(fill='x', padx=10, pady=10)

    # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å –∞–∏–º–∞
    ttk.Label(radius_frame, text="–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å –∞–∏–º–∞:", style='Dark.TLabel').grid(row=0, column=0, sticky='w',
                                                                                          padx=5, pady=5)
    ttk.Scale(radius_frame, from_=50, to=800, variable=gui_vars["aim_h_radius"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=0, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(radius_frame, textvariable=gui_vars["aim_h_radius"], style='Dark.TLabel').grid(row=0, column=2, padx=5,
                                                                                             pady=5)

    # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å –∞–∏–º–∞
    ttk.Label(radius_frame, text="–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å –∞–∏–º–∞:", style='Dark.TLabel').grid(row=1, column=0, sticky='w',
                                                                                        padx=5, pady=5)
    ttk.Scale(radius_frame, from_=50, to=800, variable=gui_vars["aim_v_radius"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=1, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(radius_frame, textvariable=gui_vars["aim_v_radius"], style='Dark.TLabel').grid(row=1, column=2, padx=5,
                                                                                             pady=5)

    return tab


def create_recoil_tab(notebook):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç–¥–∞—á–∏"""
    tab = tk.Frame(notebook, bg='#2d2d2d')

    # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–¥–∞—á–∏
    recoil_frame = ttk.LabelFrame(tab, text="‚ÜóÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ –æ—Ç–¥–∞—á–∏",
                                  style='Dark.TLabelframe', padding=15)
    recoil_frame.pack(fill='x', padx=10, pady=10)

    # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –æ—Ç–¥–∞—á–∞
    ttk.Label(recoil_frame, text="–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –æ—Ç–¥–∞—á–∞ (-2.0 –¥–æ 2.0):", style='Dark.TLabel').grid(row=0, column=0,
                                                                                                 sticky='w', padx=5,
                                                                                                 pady=5)
    ttk.Scale(recoil_frame, from_=-2.0, to=2.0, variable=gui_vars["recoil_vertical"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=0, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(recoil_frame, textvariable=gui_vars["recoil_vertical"], style='Dark.TLabel').grid(row=0, column=2, padx=5,
                                                                                                pady=5)

    # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –æ—Ç–¥–∞—á–∞
    ttk.Label(recoil_frame, text="–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –æ—Ç–¥–∞—á–∞ (-2.0 –¥–æ 2.0):", style='Dark.TLabel').grid(row=1, column=0,
                                                                                                   sticky='w', padx=5,
                                                                                                   pady=5)
    ttk.Scale(recoil_frame, from_=-2.0, to=2.0, variable=gui_vars["recoil_horizontal"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=1, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(recoil_frame, textvariable=gui_vars["recoil_horizontal"], style='Dark.TLabel').grid(row=1, column=2,
                                                                                                  padx=5, pady=5)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–µ–ª—å–±—ã
    shoot_frame = ttk.LabelFrame(tab, text="üî´ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–µ–ª—å–±—ã",
                                 style='Dark.TLabelframe', padding=15)
    shoot_frame.pack(fill='x', padx=10, pady=10)

    # –ó–∞–¥–µ—Ä–∂–∫–∞ —Å—Ç—Ä–µ–ª—å–±—ã
    ttk.Label(shoot_frame, text="–ó–∞–¥–µ—Ä–∂–∫–∞ —Å—Ç—Ä–µ–ª—å–±—ã (–º—Å):", style='Dark.TLabel').grid(row=0, column=0, sticky='w',
                                                                                     padx=5, pady=5)
    ttk.Scale(shoot_frame, from_=0, to=100, variable=gui_vars["shoot_delay"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=0, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(shoot_frame, textvariable=gui_vars["shoot_delay"], style='Dark.TLabel').grid(row=0, column=2, padx=5,
                                                                                           pady=5)

    # –†–∞–¥–∏—É—Å—ã —Å—Ç—Ä–µ–ª—å–±—ã
    ttk.Label(shoot_frame, text="–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å —Å—Ç—Ä–µ–ª—å–±—ã:", style='Dark.TLabel').grid(row=1, column=0,
                                                                                             sticky='w', padx=5, pady=5)
    ttk.Scale(shoot_frame, from_=5, to=100, variable=gui_vars["shoot_h_radius"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=1, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(shoot_frame, textvariable=gui_vars["shoot_h_radius"], style='Dark.TLabel').grid(row=1, column=2, padx=5,
                                                                                              pady=5)

    ttk.Label(shoot_frame, text="–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å —Å—Ç—Ä–µ–ª—å–±—ã:", style='Dark.TLabel').grid(row=2, column=0, sticky='w',
                                                                                           padx=5, pady=5)
    ttk.Scale(shoot_frame, from_=5, to=100, variable=gui_vars["shoot_v_radius"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=2, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(shoot_frame, textvariable=gui_vars["shoot_v_radius"], style='Dark.TLabel').grid(row=2, column=2, padx=5,
                                                                                              pady=5)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –æ—Ç–¥–∞—á–µ
    info_frame = ttk.LabelFrame(tab, text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                                style='Dark.TLabelframe', padding=15)
    info_frame.pack(fill='both', expand=True, padx=10, pady=10)

    info_text = tk.Text(info_frame, bg='#1a1a1a', fg='#ffffff', font=("Consolas", 9),
                        wrap=tk.WORD, height=8)
    info_text.pack(fill='both', expand=True)

    recoil_info = """
‚ÜóÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ –æ—Ç–¥–∞—á–∏:

‚Ä¢ –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –æ—Ç–¥–∞—á–∞: –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É—é—Ç –ø–æ–¥—ä–µ–º —Å—Ç–≤–æ–ª–∞ –≤–≤–µ—Ä—Ö
‚Ä¢ –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –æ—Ç–¥–∞—á–∞: –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É—é—Ç —É—Ö–æ–¥ –≤–ª–µ–≤–æ, –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ - –≤–ø—Ä–∞–≤–æ
‚Ä¢ –ó–∞–¥–µ—Ä–∂–∫–∞ —Å—Ç—Ä–µ–ª—å–±—ã: –ü–∞—É–∑–∞ –º–µ–∂–¥—É –≤—ã—Å—Ç—Ä–µ–ª–∞–º–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
‚Ä¢ –†–∞–¥–∏—É—Å—ã —Å—Ç—Ä–µ–ª—å–±—ã: –ó–æ–Ω–∞ –≤–æ–∫—Ä—É–≥ –ø—Ä–∏—Ü–µ–ª–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ—Å—Ç—Ä–µ–ª—å–±–∞

üí° –°–æ–≤–µ—Ç—ã:
- –ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ
- –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ —Ä–∞–∑–Ω–æ–º –æ—Ä—É–∂–∏–∏
- –î–ª—è —Ç–æ—á–Ω–æ–π —Å—Ç—Ä–µ–ª—å–±—ã —É–º–µ–Ω—å—à–∏—Ç–µ —Ä–∞–¥–∏—É—Å—ã —Å—Ç—Ä–µ–ª—å–±—ã
    """

    info_text.insert(tk.END, recoil_info)
    info_text.config(state=tk.DISABLED)

    return tab


def create_detection_tab(notebook):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–µ—Ç–µ–∫—Ü–∏–∏"""
    tab = tk.Frame(notebook, bg='#2d2d2d')

    # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏
    detection_frame = ttk.LabelFrame(tab, text="üëÅÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏",
                                     style='Dark.TLabelframe', padding=15)
    detection_frame.pack(fill='x', padx=10, pady=10)

    # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
    ttk.Label(detection_frame, text="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Ü–µ–ª–∏:", style='Dark.TLabel').grid(row=0, column=0, sticky='w',
                                                                                           padx=5, pady=5)
    ttk.Scale(detection_frame, from_=100, to=5000, variable=gui_vars["min_area"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=0, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(detection_frame, textvariable=gui_vars["min_area"], style='Dark.TLabel').grid(row=0, column=2, padx=5,
                                                                                            pady=5)

    # –°–∏–ª–∞ –∑–∞–ª–∏–≤–∫–∏
    ttk.Label(detection_frame, text="–°–∏–ª–∞ –∑–∞–ª–∏–≤–∫–∏ (0.1-2.0):", style='Dark.TLabel').grid(row=1, column=0, sticky='w',
                                                                                         padx=5, pady=5)
    ttk.Scale(detection_frame, from_=0.1, to=2.0, variable=gui_vars["fill_strength"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=1, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(detection_frame, textvariable=gui_vars["fill_strength"], style='Dark.TLabel').grid(row=1, column=2,
                                                                                                 padx=5, pady=5)

    # –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–∏–∫—Å–µ–ª–µ–π
    ttk.Label(detection_frame, text="–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–∏–∫—Å–µ–ª–µ–π (0.5-3.0):", style='Dark.TLabel').grid(row=2, column=0,
                                                                                                sticky='w', padx=5,
                                                                                                pady=5)
    ttk.Scale(detection_frame, from_=0.5, to=3.0, variable=gui_vars["pixel_expansion"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=2, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(detection_frame, textvariable=gui_vars["pixel_expansion"], style='Dark.TLabel').grid(row=2, column=2,
                                                                                                   padx=5, pady=5)

    # –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å –∑–∞–ª–∏–≤–∫–∏ –∫–æ–Ω—Ç—É—Ä–æ–≤
    ttk.Label(detection_frame, text="–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å –∑–∞–ª–∏–≤–∫–∏ (0.5-3.0):", style='Dark.TLabel').grid(row=3, column=0,
                                                                                                  sticky='w', padx=5,
                                                                                                  pady=5)
    ttk.Scale(detection_frame, from_=0.5, to=3.0, variable=gui_vars["contour_fill_aggressive"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=3, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(detection_frame, textvariable=gui_vars["contour_fill_aggressive"], style='Dark.TLabel').grid(row=3,
                                                                                                           column=2,
                                                                                                           padx=5,
                                                                                                           pady=5)

    return tab


def create_vision_tab(notebook):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–æ–Ω—ã –≤–∏–¥–∏–º–æ—Å—Ç–∏"""
    tab = tk.Frame(notebook, bg='#2d2d2d')

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–æ–Ω—ã –∑–∞—Ö–≤–∞—Ç–∞
    vision_frame = ttk.LabelFrame(tab, text="üìπ –ó–æ–Ω–∞ –∑–∞—Ö–≤–∞—Ç–∞",
                                  style='Dark.TLabelframe', padding=15)
    vision_frame.pack(fill='x', padx=10, pady=10)

    # –†–∞–∑–º–µ—Ä –∑–æ–Ω—ã –∑–∞—Ö–≤–∞—Ç–∞
    ttk.Label(vision_frame, text="–†–∞–∑–º–µ—Ä –∑–æ–Ω—ã –∑–∞—Ö–≤–∞—Ç–∞ (%):", style='Dark.TLabel').grid(row=0, column=0, sticky='w',
                                                                                       padx=5, pady=5)
    ttk.Scale(vision_frame, from_=10, to=100, variable=gui_vars["capture_zone_size"],
              orient='horizontal', length=200, command=lambda v: update_settings_from_gui()).grid(row=0, column=1,
                                                                                                  padx=5, pady=5)
    ttk.Label(vision_frame, textvariable=gui_vars["capture_zone_size"], style='Dark.TLabel').grid(row=0, column=2,
                                                                                                  padx=5, pady=5)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–æ–Ω–µ
    info_frame = ttk.LabelFrame(tab, text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏",
                                style='Dark.TLabelframe', padding=15)
    info_frame.pack(fill='both', expand=True, padx=10, pady=10)

    info_text = tk.Text(info_frame, bg='#1a1a1a', fg='#ffffff', font=("Consolas", 9),
                        wrap=tk.WORD, height=8)
    info_text.pack(fill='both', expand=True)

    vision_info = f"""
üìπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–æ–Ω—ã –≤–∏–¥–∏–º–æ—Å—Ç–∏:

üñ•Ô∏è –ü–æ–ª–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞: {SCREEN_WIDTH} x {SCREEN_HEIGHT}
üìπ –¢–µ–∫—É—â–∞—è –∑–æ–Ω–∞ –∑–∞—Ö–≤–∞—Ç–∞: {settings.capture_zone_width} x {settings.capture_zone_height}
üìç –°–º–µ—â–µ–Ω–∏–µ –∑–æ–Ω—ã: ({settings.capture_offset_x}, {settings.capture_offset_y})

‚Ä¢ –†–∞–∑–º–µ—Ä –∑–æ–Ω—ã –∑–∞—Ö–≤–∞—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–±–ª–∞—Å—Ç—å —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
‚Ä¢ –ú–µ–Ω—å—à–∞—è –∑–æ–Ω–∞ = –ª—É—á—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –ë–æ–ª—å—à–∞—è –∑–æ–Ω–∞ = –±–æ–ª—å—à–∏–π –æ—Ö–≤–∞—Ç —Ü–µ–ª–µ–π
‚Ä¢ –ó–æ–Ω–∞ –≤—Å–µ–≥–¥–∞ —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ

üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
- –î–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∏–≥—Ä: 50-70%
- –î–ª—è —Ç–æ—á–Ω–æ–π —Å—Ç—Ä–µ–ª—å–±—ã: 30-50%
- –î–ª—è –¥–∞–ª—å–Ω–∏—Ö –¥–∏—Å—Ç–∞–Ω—Ü–∏–π: 80-100%
    """

    info_text.insert(tk.END, vision_info)
    info_text.config(state=tk.DISABLED)

    return tab


def create_hotkeys_tab(notebook: ttk.Notebook) -> tk.Frame:
    """
    –í–∫–ª–∞–¥–∫–∞ ¬´–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏¬ª:
    ‚Ä¢ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –±–∏–Ω–¥—ã
    ‚Ä¢ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Ö –∏–∑–º–µ–Ω–∏—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
    """
    tab = tk.Frame(notebook, bg='#2d2d2d')

    # --- —Ç–∞–±–ª–∏—Ü–∞ –±–∏–Ω–¥–æ–≤ ----------------------------------------------------
    hotkeys_frame = ttk.LabelFrame(
        tab, text="‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏",
        style='Dark.TLabelframe', padding=15
    )
    hotkeys_frame.pack(fill='x', padx=10, pady=10)

    hotkeys_grid = tk.Frame(hotkeys_frame, bg='#2d2d2d')
    hotkeys_grid.pack(fill='x')

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    ttk.Label(
        hotkeys_grid, text="–§—É–Ω–∫—Ü–∏—è",
        style='Dark.TLabel', font=("Arial", 10, "bold")
    ).grid(row=0, column=0, padx=5, pady=5, sticky='w')

    ttk.Label(
        hotkeys_grid, text="–ö–ª–∞–≤–∏—à–∞",
        style='Dark.TLabel', font=("Arial", 10, "bold")
    ).grid(row=0, column=1, padx=5, pady=5, sticky='w')

    # –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è
    hotkey_descriptions = {
        "toggle_auto_aim": "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-–∞–∏–º",
        "toggle_auto_shoot": "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-—Å—Ç—Ä–µ–ª—å–±—É",
        "toggle_recoil_compensation": "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é –æ—Ç–¥–∞—á–∏",
        "increase_recoil_strength": "–£–≤–µ–ª–∏—á–∏—Ç—å —Å–∏–ª—É –æ—Ç–¥–∞—á–∏",
        "decrease_recoil_strength": "–£–º–µ–Ω—å—à–∏—Ç—å —Å–∏–ª—É –æ—Ç–¥–∞—á–∏",
    }

    # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë–º —Å—Ç—Ä–æ–∫–∏
    entry_vars = {}     # –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    row = 1
    for action, description in hotkey_descriptions.items():
        # –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        ttk.Label(
            hotkeys_grid, text=description,
            style='Dark.TLabel'
        ).grid(row=row, column=0, padx=5, pady=2, sticky='w')

        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –∫–ª–∞–≤–∏—à–∏
        var = tk.StringVar(value=settings.key_bindings.get(action, ""))
        entry = ttk.Entry(
            hotkeys_grid, textvariable=var,
            width=10, justify='center'
        )
        entry.grid(row=row, column=1, padx=5, pady=2, sticky='w')
        entry_vars[action] = var
        row += 1

    hotkeys_grid.columnconfigure(0, weight=1)

    # --- –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ ----------------------------------------------
    info_frame = ttk.LabelFrame(
        tab, text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à–∞—Ö",
        style='Dark.TLabelframe', padding=15
    )
    info_frame.pack(fill='both', expand=True, padx=10, pady=10)

    info_text = tk.Text(
        info_frame, bg='#1a1a1a', fg='#ffffff',
        font=("Consolas", 9), wrap=tk.WORD, height=8
    )
    info_text.pack(fill='both', expand=True)

    info_text.insert(tk.END, """
‚å®Ô∏è  –ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –∫–ª–∞–≤–∏—à—É:
  ‚Ä¢ —â—ë–ª–∫–Ω–∏—Ç–µ –ø–æ –ø–æ–ª—é, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É (—Å–∏–º–≤–æ–ª –∏–ª–∏ Key.*)
  ‚Ä¢ –Ω–∞–∂–º–∏—Ç–µ Enter ‚Üí –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ä–∞–∑—É —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è

üíæ  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ:
  ‚Ä¢ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ settings.key_bindings
  ‚Ä¢ –Ω–∞–∂–º–∏—Ç–µ ¬´–°–æ—Ö—Ä–∞–Ω–∏—Ç—å¬ª –≤ –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
""")
    info_text.config(state=tk.DISABLED)

    # --- –∫–æ–ª–±—ç–∫ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è ---------------------------------
    def on_entry_validate(event=None):
        for act, var in entry_vars.items():
            settings.key_bindings[act] = var.get().strip()
        print("üîë –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:", settings.key_bindings)

    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º Enter –∫ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—é
    for child in hotkeys_grid.winfo_children():
        if isinstance(child, ttk.Entry):
            child.bind("<Return>", on_entry_validate)

    return tab
